{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sohan\\\\Desktop\\\\Working\\\\Visitor_management New Version\\\\Frontend\\\\src\\\\pages\\\\ScanCard1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport '../styles/ScanCard1.css';\n\n// URL for your Flask OCR API endpoint\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OCR_API_URL = 'http://127.0.0.1:5000/upload';\n\n// Helper function to convert a data URL (base64) to a Blob\nconst dataURLtoBlob = dataurl => {\n  const arr = dataurl.split(',');\n  const mime = arr[0].match(/:(.*?);/)[1];\n  const bstr = atob(arr[1]);\n  let n = bstr.length;\n  const u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new Blob([u8arr], {\n    type: mime\n  });\n};\nconst ScanCard1 = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    hostName\n  } = location.state || {\n    hostName: 'Host'\n  };\n  const [cardImage, setCardImage] = useState(null);\n  const [extractedData, setExtractedData] = useState(null);\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Effect to manage camera stream\n  useEffect(() => {\n    if (isCameraOn) {\n      startCamera();\n    } else {\n      stopCamera();\n    }\n    return () => stopCamera();\n  }, [isCameraOn]);\n  const startCamera = async () => {\n    stopCamera();\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'environment'\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (err) {\n      console.error(\"Error accessing camera:\", err);\n      setError(\"Could not access the camera. Please check permissions.\");\n      setIsCameraOn(false);\n    }\n  };\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n  };\n  const handleCapture = () => {\n    if (videoRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n      const imageDataUrl = canvas.toDataURL('image/png');\n      setCardImage(imageDataUrl);\n      setExtractedData(null);\n      setIsCameraOn(false);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setCardImage(reader.result);\n        setExtractedData(null);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // --- This function now calls your Flask API ---\n  const handleScan = async () => {\n    if (!cardImage) {\n      setError(\"Please capture or upload a business card first.\");\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    setExtractedData(null);\n    try {\n      // Convert the base64 image to a Blob\n      const imageBlob = dataURLtoBlob(cardImage);\n\n      // Create a FormData object to send the file\n      const formData = new FormData();\n      formData.append('file', imageBlob, 'business_card.png');\n\n      // Make the API call to the Flask server\n      const response = await fetch(OCR_API_URL, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'Server error occurred.');\n      }\n      const data = await response.json();\n      console.log(\"Extracted Data:\", data);\n      setExtractedData(data); // Store the extracted data\n    } catch (err) {\n      setError(`Failed to extract data: ${err.message}`);\n      console.error(\"OCR Error:\", err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleConfirm = () => {\n    // Navigate to the check-in page with the extracted data\n    // We'll pass the relevant fields to pre-fill the form\n    const prefillData = {\n      name: extractedData.name,\n      email: extractedData.email,\n      phone: extractedData.personal_mobile_number,\n      company: extractedData.company,\n      designation: extractedData.designation,\n      address: extractedData.address,\n      website: extractedData.website,\n      companyTel: extractedData.company_number\n\n      // You can add more fields here if your check-in page supports them\n    };\n    console.log(\"Prefill Data:\", prefillData);\n    navigate('/checkin', {\n      state: {\n        prefillData,\n        hostName\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"scan-card-title\",\n        children: \"Scan Business Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"scan-card-subtitle\",\n        children: \"Capture or upload an image of the business card.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), isCameraOn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          className: \"camera-video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCapture,\n            className: \"control-btn capture-btn\",\n            children: \"Capture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCameraOn(false),\n            className: \"control-btn cancel-btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCameraOn(true),\n            className: \"action-btn scan-btn\",\n            children: \"Scan with Camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUploadClick,\n            className: \"action-btn upload-btn\",\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handleFileChange,\n            accept: \"image/*\",\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this), cardImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cardImage,\n            alt: \"Business Card Preview\",\n            className: \"image-preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleScan,\n            className: \"action-btn process-btn\",\n            disabled: isLoading,\n            children: isLoading ? 'Scanning...' : 'Scan for Details'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 27\n      }, this), extractedData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extracted-data-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Extracted Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 32\n            }, this), \" \", extractedData.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Designation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 32\n            }, this), \" \", extractedData.designation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Company:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 32\n            }, this), \" \", extractedData.company]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 32\n            }, this), \" \", extractedData.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Mobile:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 32\n            }, this), \" \", extractedData.personal_mobile_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Company Tel:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 32\n            }, this), \" \", extractedData.company_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Website:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 32\n            }, this), \" \", extractedData.website]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 32\n            }, this), \" \", extractedData.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          className: \"action-btn confirm-btn\",\n          children: \"Confirm and Proceed to Check-In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n};\n_s(ScanCard1, \"5IuMXgCcgaBsYmOjaSPYrsfY7VQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ScanCard1;\nexport default ScanCard1;\nvar _c;\n$RefreshReg$(_c, \"ScanCard1\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","OCR_API_URL","dataURLtoBlob","dataurl","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","type","ScanCard1","_s","location","navigate","hostName","state","cardImage","setCardImage","extractedData","setExtractedData","isCameraOn","setIsCameraOn","isLoading","setIsLoading","error","setError","videoRef","canvasRef","fileInputRef","startCamera","stopCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","err","console","getTracks","forEach","track","stop","handleCapture","canvas","width","videoWidth","height","videoHeight","getContext","drawImage","imageDataUrl","toDataURL","handleFileChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleUploadClick","click","handleScan","imageBlob","formData","FormData","append","response","fetch","method","body","ok","errData","json","Error","data","log","message","handleConfirm","prefillData","name","email","phone","personal_mobile_number","company","designation","address","website","companyTel","company_number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","style","display","onClick","onChange","accept","src","alt","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sohan/Desktop/Working/Visitor_management New Version/Frontend/src/pages/ScanCard1.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport '../styles/ScanCard1.css'; \r\n\r\n// URL for your Flask OCR API endpoint\r\nconst OCR_API_URL = 'http://127.0.0.1:5000/upload';\r\n\r\n// Helper function to convert a data URL (base64) to a Blob\r\nconst dataURLtoBlob = (dataurl) => {\r\n    const arr = dataurl.split(',');\r\n    const mime = arr[0].match(/:(.*?);/)[1];\r\n    const bstr = atob(arr[1]);\r\n    let n = bstr.length;\r\n    const u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new Blob([u8arr], { type: mime });\r\n}\r\n\r\n\r\nconst ScanCard1 = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { hostName } = location.state || { hostName: 'Host' };\r\n\r\n    const [cardImage, setCardImage] = useState(null);\r\n    const [extractedData, setExtractedData] = useState(null);\r\n    const [isCameraOn, setIsCameraOn] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n\r\n    // Effect to manage camera stream\r\n    useEffect(() => {\r\n        if (isCameraOn) {\r\n            startCamera();\r\n        } else {\r\n            stopCamera();\r\n        }\r\n        return () => stopCamera();\r\n    }, [isCameraOn]);\r\n\r\n    const startCamera = async () => {\r\n        stopCamera();\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({\r\n                video: { facingMode: 'environment' }\r\n            });\r\n            if (videoRef.current) {\r\n                videoRef.current.srcObject = stream;\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error accessing camera:\", err);\r\n            setError(\"Could not access the camera. Please check permissions.\");\r\n            setIsCameraOn(false);\r\n        }\r\n    };\r\n\r\n    const stopCamera = () => {\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n            videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n            videoRef.current.srcObject = null;\r\n        }\r\n    };\r\n\r\n    const handleCapture = () => {\r\n        if (videoRef.current) {\r\n            const video = videoRef.current;\r\n            const canvas = canvasRef.current;\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n            const imageDataUrl = canvas.toDataURL('image/png');\r\n            setCardImage(imageDataUrl);\r\n            setExtractedData(null);\r\n            setIsCameraOn(false);\r\n        }\r\n    };\r\n    \r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setCardImage(reader.result);\r\n                setExtractedData(null);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const handleUploadClick = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n    \r\n    // --- This function now calls your Flask API ---\r\n    const handleScan = async () => {\r\n        if (!cardImage) {\r\n            setError(\"Please capture or upload a business card first.\");\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        setError('');\r\n        setExtractedData(null);\r\n\r\n        try {\r\n            // Convert the base64 image to a Blob\r\n            const imageBlob = dataURLtoBlob(cardImage);\r\n            \r\n            // Create a FormData object to send the file\r\n            const formData = new FormData();\r\n            formData.append('file', imageBlob, 'business_card.png');\r\n\r\n            // Make the API call to the Flask server\r\n            const response = await fetch(OCR_API_URL, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errData = await response.json();\r\n                throw new Error(errData.error || 'Server error occurred.');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"Extracted Data:\", data);\r\n            setExtractedData(data); // Store the extracted data\r\n\r\n        } catch (err) {\r\n            setError(`Failed to extract data: ${err.message}`);\r\n            console.error(\"OCR Error:\", err);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    \r\n    const handleConfirm = () => {\r\n        // Navigate to the check-in page with the extracted data\r\n        // We'll pass the relevant fields to pre-fill the form\r\n        const prefillData = {\r\n            name: extractedData.name,\r\n            email: extractedData.email,\r\n            phone: extractedData.personal_mobile_number,\r\n            company: extractedData.company,\r\n            designation: extractedData.designation,\r\n            address: extractedData.address,\r\n            website: extractedData.website,\r\n            companyTel: extractedData.company_number,\r\n          \r\n            // You can add more fields here if your check-in page supports them\r\n        };\r\n        console.log(\"Prefill Data:\", prefillData);\r\n        navigate('/checkin', { state: { prefillData, hostName } });\r\n    };\r\n\r\n    return (\r\n        <div className=\"scan-card-container\">\r\n            <div className=\"scan-card-content\">\r\n                <h1 className=\"scan-card-title\">Scan Business Card</h1>\r\n                <p className=\"scan-card-subtitle\">Capture or upload an image of the business card.</p>\r\n                \r\n                {isCameraOn ? (\r\n                    <div className=\"camera-view\">\r\n                        <video ref={videoRef} autoPlay playsInline className=\"camera-video\"></video>\r\n                        <canvas ref={canvasRef} style={{ display: 'none' }}></canvas>\r\n                        <div className=\"camera-controls\">\r\n                            <button onClick={handleCapture} className=\"control-btn capture-btn\">Capture</button>\r\n                            <button onClick={() => setIsCameraOn(false)} className=\"control-btn cancel-btn\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"action-buttons\">\r\n                            <button onClick={() => setIsCameraOn(true)} className=\"action-btn scan-btn\">Scan with Camera</button>\r\n                            <button onClick={handleUploadClick} className=\"action-btn upload-btn\">Upload Image</button>\r\n                            <input\r\n                                type=\"file\"\r\n                                ref={fileInputRef}\r\n                                onChange={handleFileChange}\r\n                                accept=\"image/*\"\r\n                                style={{ display: 'none' }}\r\n                            />\r\n                        </div>\r\n\r\n                        {cardImage && (\r\n                            <div className=\"image-preview-section\">\r\n                                <h2 className=\"section-title\">Preview</h2>\r\n                                <img src={cardImage} alt=\"Business Card Preview\" className=\"image-preview\" />\r\n                                <button onClick={handleScan} className=\"action-btn process-btn\" disabled={isLoading}>\r\n                                    {isLoading ? 'Scanning...' : 'Scan for Details'}\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                {extractedData && (\r\n                    <div className=\"extracted-data-section\">\r\n                        <h2 className=\"section-title\">Extracted Information</h2>\r\n                        <div className=\"data-card\">\r\n                            <p><strong>Name:</strong> {extractedData.name}</p>\r\n                            <p><strong>Designation:</strong> {extractedData.designation}</p>\r\n                            <p><strong>Company:</strong> {extractedData.company}</p>\r\n                            <p><strong>Email:</strong> {extractedData.email}</p>\r\n                            <p><strong>Mobile:</strong> {extractedData.personal_mobile_number}</p>\r\n                            <p><strong>Company Tel:</strong> {extractedData.company_number}</p>\r\n                            <p><strong>Website:</strong> {extractedData.website}</p>\r\n                            <p><strong>Address:</strong> {extractedData.address}</p>\r\n                        </div>\r\n                        <button onClick={handleConfirm} className=\"action-btn confirm-btn\">\r\n                            Confirm and Proceed to Check-In\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScanCard1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
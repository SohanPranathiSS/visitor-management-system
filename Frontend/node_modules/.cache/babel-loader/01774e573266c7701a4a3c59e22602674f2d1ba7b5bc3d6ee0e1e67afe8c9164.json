{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{useLocation,useNavigate}from'react-router-dom';import'../styles/ScanCard1.css';// URL for your Flask OCR API endpoint\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const OCR_API_URL='http://127.0.0.1:5000/upload';// Helper function to convert a data URL (base64) to a Blob\nconst dataURLtoBlob=dataurl=>{const arr=dataurl.split(',');const mime=arr[0].match(/:(.*?);/)[1];const bstr=atob(arr[1]);let n=bstr.length;const u8arr=new Uint8Array(n);while(n--){u8arr[n]=bstr.charCodeAt(n);}return new Blob([u8arr],{type:mime});};const ScanCard1=()=>{const location=useLocation();const navigate=useNavigate();const{hostName}=location.state||{hostName:'Host'};const[cardImage,setCardImage]=useState(null);const[extractedData,setExtractedData]=useState(null);const[isCameraOn,setIsCameraOn]=useState(false);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState('');const videoRef=useRef(null);const canvasRef=useRef(null);const fileInputRef=useRef(null);// Effect to manage camera stream\nuseEffect(()=>{if(isCameraOn){startCamera();}else{stopCamera();}return()=>stopCamera();},[isCameraOn]);const startCamera=async()=>{stopCamera();try{const stream=await navigator.mediaDevices.getUserMedia({video:{facingMode:'environment'}});if(videoRef.current){videoRef.current.srcObject=stream;}}catch(err){console.error(\"Error accessing camera:\",err);setError(\"Could not access the camera. Please check permissions.\");setIsCameraOn(false);}};const stopCamera=()=>{if(videoRef.current&&videoRef.current.srcObject){const tracks=videoRef.current.srcObject.getTracks();tracks.forEach(track=>{track.stop();console.log('Camera track stopped:',track.kind);});videoRef.current.srcObject=null;}};const handleCapture=()=>{if(videoRef.current){const video=videoRef.current;const canvas=canvasRef.current;canvas.width=video.videoWidth;canvas.height=video.videoHeight;canvas.getContext('2d').drawImage(video,0,0,video.videoWidth,video.videoHeight);const imageDataUrl=canvas.toDataURL('image/png');setCardImage(imageDataUrl);setExtractedData(null);stopCamera();setIsCameraOn(false);}};const handleFileChange=event=>{const file=event.target.files[0];if(file){const reader=new FileReader();reader.onloadend=()=>{setCardImage(reader.result);setExtractedData(null);};reader.readAsDataURL(file);}};const handleUploadClick=()=>{fileInputRef.current.click();};// --- This function now calls your Flask API ---\nconst handleScan=async()=>{if(!cardImage){setError(\"Please capture or upload a business card first.\");return;}setIsLoading(true);setError('');setExtractedData(null);try{// Convert the base64 image to a Blob\nconst imageBlob=dataURLtoBlob(cardImage);// Create a FormData object to send the file\nconst formData=new FormData();formData.append('file',imageBlob,'business_card.png');// Make the API call to the Flask server\nconst response=await fetch(OCR_API_URL,{method:'POST',body:formData});if(!response.ok){const errData=await response.json();throw new Error(errData.error||'Server error occurred.');}const data=await response.json();console.log(\"Extracted Data:\",data);setExtractedData(data);// Store the extracted data\n}catch(err){setError(`Failed to extract data: ${err.message}`);console.error(\"OCR Error:\",err);}finally{setIsLoading(false);}};const handleConfirm=()=>{// Navigate to the check-in page with the extracted data\n// We'll pass the relevant fields to pre-fill the form\nconst prefillData={name:extractedData.name,email:extractedData.email,phone:extractedData.personal_mobile_number,company:extractedData.company,designation:extractedData.designation,address:extractedData.address,website:extractedData.website,companyTel:extractedData.company_number// You can add more fields here if your check-in page supports them\n};console.log(\"Prefill Data:\",prefillData);navigate('/checkin',{state:{prefillData,hostName}});};return/*#__PURE__*/_jsx(\"div\",{className:\"scan-card-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"scan-card-content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"scan-card-title\",children:\"Scan Business Card\"}),/*#__PURE__*/_jsx(\"p\",{className:\"scan-card-subtitle\",children:\"Capture or upload an image of the business card.\"}),isCameraOn?/*#__PURE__*/_jsxs(\"div\",{className:\"camera-view\",children:[/*#__PURE__*/_jsx(\"video\",{ref:videoRef,autoPlay:true,playsInline:true,className:\"camera-video\"}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{display:'none'}}),/*#__PURE__*/_jsxs(\"div\",{className:\"camera-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCapture,className:\"control-btn capture-btn\",children:\"Capture\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{stopCamera();setIsCameraOn(false);},className:\"control-btn cancel-btn\",children:\"Cancel\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsCameraOn(true),className:\"action-btn scan-btn\",children:\"Scan with Camera\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUploadClick,className:\"action-btn upload-btn\",children:\"Upload Image\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,onChange:handleFileChange,accept:\"image/*\",style:{display:'none'}})]}),cardImage&&/*#__PURE__*/_jsxs(\"div\",{className:\"image-preview-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Preview\"}),/*#__PURE__*/_jsx(\"img\",{src:cardImage,alt:\"Business Card Preview\",className:\"image-preview\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleScan,className:\"action-btn process-btn\",disabled:isLoading,children:isLoading?'Scanning...':'Scan for Details'})]})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),extractedData&&/*#__PURE__*/_jsxs(\"div\",{className:\"extracted-data-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"Extracted Information\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"data-card\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",extractedData.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Designation:\"}),\" \",extractedData.designation]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Company:\"}),\" \",extractedData.company]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",extractedData.email]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Mobile:\"}),\" \",extractedData.personal_mobile_number]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Company Tel:\"}),\" \",extractedData.company_number]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Website:\"}),\" \",extractedData.website]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Address:\"}),\" \",extractedData.address]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleConfirm,className:\"action-btn confirm-btn\",children:\"Confirm and Proceed to Check-In\"})]})]})});};export default ScanCard1;","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OCR_API_URL","dataURLtoBlob","dataurl","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","type","ScanCard1","location","navigate","hostName","state","cardImage","setCardImage","extractedData","setExtractedData","isCameraOn","setIsCameraOn","isLoading","setIsLoading","error","setError","videoRef","canvasRef","fileInputRef","startCamera","stopCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","err","console","tracks","getTracks","forEach","track","stop","log","kind","handleCapture","canvas","width","videoWidth","height","videoHeight","getContext","drawImage","imageDataUrl","toDataURL","handleFileChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleUploadClick","click","handleScan","imageBlob","formData","FormData","append","response","fetch","method","body","ok","errData","json","Error","data","message","handleConfirm","prefillData","name","email","phone","personal_mobile_number","company","designation","address","website","companyTel","company_number","className","children","ref","autoPlay","playsInline","style","display","onClick","onChange","accept","src","alt","disabled"],"sources":["C:/Users/sohan/Desktop/Actually Working/Visitor_management V2/Frontend/src/pages/ScanCard1.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport '../styles/ScanCard1.css'; \r\n\r\n// URL for your Flask OCR API endpoint\r\nconst OCR_API_URL = 'http://127.0.0.1:5000/upload';\r\n\r\n// Helper function to convert a data URL (base64) to a Blob\r\nconst dataURLtoBlob = (dataurl) => {\r\n    const arr = dataurl.split(',');\r\n    const mime = arr[0].match(/:(.*?);/)[1];\r\n    const bstr = atob(arr[1]);\r\n    let n = bstr.length;\r\n    const u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new Blob([u8arr], { type: mime });\r\n}\r\n\r\n\r\nconst ScanCard1 = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { hostName } = location.state || { hostName: 'Host' };\r\n\r\n    const [cardImage, setCardImage] = useState(null);\r\n    const [extractedData, setExtractedData] = useState(null);\r\n    const [isCameraOn, setIsCameraOn] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n\r\n    // Effect to manage camera stream\r\n    useEffect(() => {\r\n        if (isCameraOn) {\r\n            startCamera();\r\n        } else {\r\n            stopCamera();\r\n        }\r\n        return () => stopCamera();\r\n    }, [isCameraOn]);\r\n\r\n    const startCamera = async () => {\r\n        stopCamera();\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({\r\n                video: { facingMode: 'environment' }\r\n            });\r\n            if (videoRef.current) {\r\n                videoRef.current.srcObject = stream;\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error accessing camera:\", err);\r\n            setError(\"Could not access the camera. Please check permissions.\");\r\n            setIsCameraOn(false);\r\n        }\r\n    };\r\n\r\n    const stopCamera = () => {\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n            const tracks = videoRef.current.srcObject.getTracks();\r\n            tracks.forEach(track => {\r\n                track.stop();\r\n                console.log('Camera track stopped:', track.kind);\r\n            });\r\n            videoRef.current.srcObject = null;\r\n        }\r\n    };\r\n\r\n    const handleCapture = () => {\r\n        if (videoRef.current) {\r\n            const video = videoRef.current;\r\n            const canvas = canvasRef.current;\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n            const imageDataUrl = canvas.toDataURL('image/png');\r\n            setCardImage(imageDataUrl);\r\n            setExtractedData(null);\r\n            stopCamera();\r\n            setIsCameraOn(false);\r\n        }\r\n    };\r\n    \r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setCardImage(reader.result);\r\n                setExtractedData(null);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const handleUploadClick = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n    \r\n    // --- This function now calls your Flask API ---\r\n    const handleScan = async () => {\r\n        if (!cardImage) {\r\n            setError(\"Please capture or upload a business card first.\");\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        setError('');\r\n        setExtractedData(null);\r\n\r\n        try {\r\n            // Convert the base64 image to a Blob\r\n            const imageBlob = dataURLtoBlob(cardImage);\r\n            \r\n            // Create a FormData object to send the file\r\n            const formData = new FormData();\r\n            formData.append('file', imageBlob, 'business_card.png');\r\n\r\n            // Make the API call to the Flask server\r\n            const response = await fetch(OCR_API_URL, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errData = await response.json();\r\n                throw new Error(errData.error || 'Server error occurred.');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"Extracted Data:\", data);\r\n            setExtractedData(data); // Store the extracted data\r\n\r\n        } catch (err) {\r\n            setError(`Failed to extract data: ${err.message}`);\r\n            console.error(\"OCR Error:\", err);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    \r\n    const handleConfirm = () => {\r\n        // Navigate to the check-in page with the extracted data\r\n        // We'll pass the relevant fields to pre-fill the form\r\n        const prefillData = {\r\n            name: extractedData.name,\r\n            email: extractedData.email,\r\n            phone: extractedData.personal_mobile_number,\r\n            company: extractedData.company,\r\n            designation: extractedData.designation,\r\n            address: extractedData.address,\r\n            website: extractedData.website,\r\n            companyTel: extractedData.company_number,\r\n          \r\n            // You can add more fields here if your check-in page supports them\r\n        };\r\n        console.log(\"Prefill Data:\", prefillData);\r\n        navigate('/checkin', { state: { prefillData, hostName } });\r\n    };\r\n\r\n    return (\r\n        <div className=\"scan-card-container\">\r\n            <div className=\"scan-card-content\">\r\n                <h1 className=\"scan-card-title\">Scan Business Card</h1>\r\n                <p className=\"scan-card-subtitle\">Capture or upload an image of the business card.</p>\r\n                \r\n                {isCameraOn ? (\r\n                    <div className=\"camera-view\">\r\n                        <video ref={videoRef} autoPlay playsInline className=\"camera-video\"></video>\r\n                        <canvas ref={canvasRef} style={{ display: 'none' }}></canvas>\r\n                        <div className=\"camera-controls\">\r\n                            <button onClick={handleCapture} className=\"control-btn capture-btn\">Capture</button>\r\n                            <button onClick={() => {\r\n                                stopCamera();\r\n                                setIsCameraOn(false);\r\n                            }} className=\"control-btn cancel-btn\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"action-buttons\">\r\n                            <button onClick={() => setIsCameraOn(true)} className=\"action-btn scan-btn\">Scan with Camera</button>\r\n                            <button onClick={handleUploadClick} className=\"action-btn upload-btn\">Upload Image</button>\r\n                            <input\r\n                                type=\"file\"\r\n                                ref={fileInputRef}\r\n                                onChange={handleFileChange}\r\n                                accept=\"image/*\"\r\n                                style={{ display: 'none' }}\r\n                            />\r\n                        </div>\r\n\r\n                        {cardImage && (\r\n                            <div className=\"image-preview-section\">\r\n                                <h2 className=\"section-title\">Preview</h2>\r\n                                <img src={cardImage} alt=\"Business Card Preview\" className=\"image-preview\" />\r\n                                <button onClick={handleScan} className=\"action-btn process-btn\" disabled={isLoading}>\r\n                                    {isLoading ? 'Scanning...' : 'Scan for Details'}\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                {extractedData && (\r\n                    <div className=\"extracted-data-section\">\r\n                        <h2 className=\"section-title\">Extracted Information</h2>\r\n                        <div className=\"data-card\">\r\n                            <p><strong>Name:</strong> {extractedData.name}</p>\r\n                            <p><strong>Designation:</strong> {extractedData.designation}</p>\r\n                            <p><strong>Company:</strong> {extractedData.company}</p>\r\n                            <p><strong>Email:</strong> {extractedData.email}</p>\r\n                            <p><strong>Mobile:</strong> {extractedData.personal_mobile_number}</p>\r\n                            <p><strong>Company Tel:</strong> {extractedData.company_number}</p>\r\n                            <p><strong>Website:</strong> {extractedData.website}</p>\r\n                            <p><strong>Address:</strong> {extractedData.address}</p>\r\n                        </div>\r\n                        <button onClick={handleConfirm} className=\"action-btn confirm-btn\">\r\n                            Confirm and Proceed to Check-In\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScanCard1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
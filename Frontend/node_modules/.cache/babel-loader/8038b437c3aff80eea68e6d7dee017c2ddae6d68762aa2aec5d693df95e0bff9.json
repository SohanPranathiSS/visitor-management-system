{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sohan\\\\Desktop\\\\Working\\\\Visitor_management New Version\\\\Frontend\\\\src\\\\pages\\\\ScanCard1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './ScanCard1.css'; // Updated CSS import\n\n// This is a mock function. Replace with your actual OCR API call.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockOcrApiService = async imageData => {\n  console.log(\"Simulating OCR API call with image data...\");\n  // Simulate a network delay\n  await new Promise(resolve => setTimeout(resolve, 1500));\n\n  // In a real app, you would send the imageData to your backend/OCR service\n  // and get back structured data.\n  if (imageData) {\n    return {\n      name: 'John Doe',\n      email: 'john.doe@example.com',\n      phone: '123-456-7890',\n      company: 'Example Inc.'\n    };\n  } else {\n    throw new Error(\"No image data provided.\");\n  }\n};\n\n// Updated component name to ScanCard1\nconst ScanCard1 = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    hostName\n  } = location.state || {\n    hostName: 'Host'\n  };\n  const [cardImage, setCardImage] = useState(null);\n  const [extractedData, setExtractedData] = useState(null);\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Effect to manage camera stream\n  useEffect(() => {\n    if (isCameraOn) {\n      startCamera();\n    } else {\n      stopCamera();\n    }\n    // Cleanup function to stop camera when component unmounts\n    return () => stopCamera();\n  }, [isCameraOn]);\n  const startCamera = async () => {\n    stopCamera(); // Ensure any existing stream is stopped\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'environment'\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (err) {\n      console.error(\"Error accessing camera:\", err);\n      setError(\"Could not access the camera. Please check permissions.\");\n      setIsCameraOn(false);\n    }\n  };\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n  };\n  const handleCapture = () => {\n    if (videoRef.current) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const context = canvas.getContext('2d');\n      context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n      const imageDataUrl = canvas.toDataURL('image/png');\n      setCardImage(imageDataUrl);\n      setExtractedData(null);\n      setIsCameraOn(false);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setCardImage(reader.result);\n        setExtractedData(null);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n  const handleScan = async () => {\n    if (!cardImage) {\n      setError(\"Please capture or upload a business card first.\");\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      const data = await mockOcrApiService(cardImage);\n      setExtractedData(data);\n    } catch (err) {\n      setError(\"Failed to extract data from the card. Please try again.\");\n      console.error(\"OCR Error:\", err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleConfirm = () => {\n    // Navigate to the check-in page with the extracted data\n    navigate('/checkin', {\n      state: {\n        prefillData: extractedData,\n        hostName\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scan-card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"scan-card-title\",\n        children: \"Scan Business Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"scan-card-subtitle\",\n        children: \"Capture or upload an image of the business card.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), isCameraOn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          playsInline: true,\n          className: \"camera-video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCapture,\n            className: \"control-btn capture-btn\",\n            children: \"Capture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCameraOn(false),\n            className: \"control-btn cancel-btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsCameraOn(true),\n            className: \"action-btn scan-btn\",\n            children: \"Scan with Camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUploadClick,\n            className: \"action-btn upload-btn\",\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handleFileChange,\n            accept: \"image/*\",\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), cardImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cardImage,\n            alt: \"Business Card Preview\",\n            className: \"image-preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleScan,\n            className: \"action-btn process-btn\",\n            disabled: isLoading,\n            children: isLoading ? 'Scanning...' : 'Scan for Details'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 27\n      }, this), extractedData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extracted-data-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Extracted Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 32\n            }, this), \" \", extractedData.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 32\n            }, this), \" \", extractedData.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 32\n            }, this), \" \", extractedData.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Company:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 32\n            }, this), \" \", extractedData.company]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          className: \"action-btn confirm-btn\",\n          children: \"Confirm and Proceed to Check-In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n\n// Updated export to ScanCard1\n_s(ScanCard1, \"5IuMXgCcgaBsYmOjaSPYrsfY7VQ=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ScanCard1;\nexport default ScanCard1;\nvar _c;\n$RefreshReg$(_c, \"ScanCard1\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","mockOcrApiService","imageData","console","log","Promise","resolve","setTimeout","name","email","phone","company","Error","ScanCard1","_s","location","navigate","hostName","state","cardImage","setCardImage","extractedData","setExtractedData","isCameraOn","setIsCameraOn","isLoading","setIsLoading","error","setError","videoRef","canvasRef","fileInputRef","startCamera","stopCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","err","getTracks","forEach","track","stop","handleCapture","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","imageDataUrl","toDataURL","handleFileChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleUploadClick","click","handleScan","data","handleConfirm","prefillData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","style","display","onClick","type","onChange","accept","src","alt","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sohan/Desktop/Working/Visitor_management New Version/Frontend/src/pages/ScanCard1.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './ScanCard1.css'; // Updated CSS import\r\n\r\n// This is a mock function. Replace with your actual OCR API call.\r\nconst mockOcrApiService = async (imageData) => {\r\n    console.log(\"Simulating OCR API call with image data...\");\r\n    // Simulate a network delay\r\n    await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n    // In a real app, you would send the imageData to your backend/OCR service\r\n    // and get back structured data.\r\n    if (imageData) {\r\n        return {\r\n            name: 'John Doe',\r\n            email: 'john.doe@example.com',\r\n            phone: '123-456-7890',\r\n            company: 'Example Inc.',\r\n        };\r\n    } else {\r\n        throw new Error(\"No image data provided.\");\r\n    }\r\n};\r\n\r\n// Updated component name to ScanCard1\r\nconst ScanCard1 = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { hostName } = location.state || { hostName: 'Host' };\r\n\r\n    const [cardImage, setCardImage] = useState(null);\r\n    const [extractedData, setExtractedData] = useState(null);\r\n    const [isCameraOn, setIsCameraOn] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n\r\n    // Effect to manage camera stream\r\n    useEffect(() => {\r\n        if (isCameraOn) {\r\n            startCamera();\r\n        } else {\r\n            stopCamera();\r\n        }\r\n        // Cleanup function to stop camera when component unmounts\r\n        return () => stopCamera();\r\n    }, [isCameraOn]);\r\n\r\n    const startCamera = async () => {\r\n        stopCamera(); // Ensure any existing stream is stopped\r\n        try {\r\n            const stream = await navigator.mediaDevices.getUserMedia({\r\n                video: { facingMode: 'environment' }\r\n            });\r\n            if (videoRef.current) {\r\n                videoRef.current.srcObject = stream;\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error accessing camera:\", err);\r\n            setError(\"Could not access the camera. Please check permissions.\");\r\n            setIsCameraOn(false);\r\n        }\r\n    };\r\n\r\n    const stopCamera = () => {\r\n        if (videoRef.current && videoRef.current.srcObject) {\r\n            videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n            videoRef.current.srcObject = null;\r\n        }\r\n    };\r\n\r\n    const handleCapture = () => {\r\n        if (videoRef.current) {\r\n            const video = videoRef.current;\r\n            const canvas = canvasRef.current;\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            const context = canvas.getContext('2d');\r\n            context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\r\n            const imageDataUrl = canvas.toDataURL('image/png');\r\n            setCardImage(imageDataUrl);\r\n            setExtractedData(null);\r\n            setIsCameraOn(false);\r\n        }\r\n    };\r\n    \r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setCardImage(reader.result);\r\n                setExtractedData(null);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const handleUploadClick = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    const handleScan = async () => {\r\n        if (!cardImage) {\r\n            setError(\"Please capture or upload a business card first.\");\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        setError('');\r\n        try {\r\n            const data = await mockOcrApiService(cardImage);\r\n            setExtractedData(data);\r\n        } catch (err) {\r\n            setError(\"Failed to extract data from the card. Please try again.\");\r\n            console.error(\"OCR Error:\", err);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    \r\n    const handleConfirm = () => {\r\n        // Navigate to the check-in page with the extracted data\r\n        navigate('/checkin', { state: { prefillData: extractedData, hostName } });\r\n    };\r\n\r\n    return (\r\n        <div className=\"scan-card-container\">\r\n            <div className=\"scan-card-content\">\r\n                <h1 className=\"scan-card-title\">Scan Business Card</h1>\r\n                <p className=\"scan-card-subtitle\">Capture or upload an image of the business card.</p>\r\n                \r\n                {isCameraOn ? (\r\n                    <div className=\"camera-view\">\r\n                        <video ref={videoRef} autoPlay playsInline className=\"camera-video\"></video>\r\n                        <canvas ref={canvasRef} style={{ display: 'none' }}></canvas>\r\n                        <div className=\"camera-controls\">\r\n                            <button onClick={handleCapture} className=\"control-btn capture-btn\">Capture</button>\r\n                            <button onClick={() => setIsCameraOn(false)} className=\"control-btn cancel-btn\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"action-buttons\">\r\n                            <button onClick={() => setIsCameraOn(true)} className=\"action-btn scan-btn\">Scan with Camera</button>\r\n                            <button onClick={handleUploadClick} className=\"action-btn upload-btn\">Upload Image</button>\r\n                            <input\r\n                                type=\"file\"\r\n                                ref={fileInputRef}\r\n                                onChange={handleFileChange}\r\n                                accept=\"image/*\"\r\n                                style={{ display: 'none' }}\r\n                            />\r\n                        </div>\r\n\r\n                        {cardImage && (\r\n                            <div className=\"image-preview-section\">\r\n                                <h2 className=\"section-title\">Preview</h2>\r\n                                <img src={cardImage} alt=\"Business Card Preview\" className=\"image-preview\" />\r\n                                <button onClick={handleScan} className=\"action-btn process-btn\" disabled={isLoading}>\r\n                                    {isLoading ? 'Scanning...' : 'Scan for Details'}\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                {extractedData && (\r\n                    <div className=\"extracted-data-section\">\r\n                        <h2 className=\"section-title\">Extracted Information</h2>\r\n                        <div className=\"data-card\">\r\n                            <p><strong>Name:</strong> {extractedData.name}</p>\r\n                            <p><strong>Email:</strong> {extractedData.email}</p>\r\n                            <p><strong>Phone:</strong> {extractedData.phone}</p>\r\n                            <p><strong>Company:</strong> {extractedData.company}</p>\r\n                        </div>\r\n                        <button onClick={handleConfirm} className=\"action-btn confirm-btn\">\r\n                            Confirm and Proceed to Check-In\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Updated export to ScanCard1\r\nexport default ScanCard1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}